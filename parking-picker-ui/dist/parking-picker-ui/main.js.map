{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/core/material.module.ts","webpack:///./src/app/dialog/dialog.component.css","webpack:///./src/app/dialog/dialog.component.html","webpack:///./src/app/dialog/dialog.component.ts","webpack:///./src/app/map/map.component.css","webpack:///./src/app/map/map.component.html","webpack:///./src/app/map/map.component.ts","webpack:///./src/app/navigation/navigation.component.css","webpack:///./src/app/navigation/navigation.component.html","webpack:///./src/app/navigation/navigation.component.ts","webpack:///./src/app/pipes/time.pipe.ts","webpack:///./src/app/services/backend.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<link rel=\\\"stylesheet\\\" href=\\\"https://use.fontawesome.com/releases/v5.5.0/css/all.css\\\" integrity=\\\"sha384-B4dIYHKNBt8Bc12p+WXckhzcICo0wtJAoU8YZTY5qE0Id1GSseTk6S+L3BlXeVIU\\\" crossorigin=\\\"anonymous\\\">\\n<app-navigation></app-navigation>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'parking-picker-ui';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NavigationComponent } from './navigation/navigation.component';\nimport { MapComponent } from './map/map.component';\nimport { RouterModule, Routes } from '@angular/router';\nimport { CustomMaterialModule } from './core/material.module';\nimport { NgxMapboxGLModule } from 'ngx-mapbox-gl';\nimport { MatSelectModule } from '@angular/material/select';\nimport { HttpClientModule } from '@angular/common/http';\nimport { BackendService } from './services/backend.service';\nimport { MatDialogModule } from '@angular/material';\nimport { MAT_DIALOG_DATA } from '@angular/material';\nimport { MAT_DIALOG_DEFAULT_OPTIONS } from '@angular/material';\nimport { ParkDialogComponent } from './dialog/dialog.component';\nimport { TimePipe } from './pipes/time.pipe';\nimport { MatRadioModule } from '@angular/material';\nimport { MatSnackBarModule } from '@angular/material';\n\nconst appRoutes: Routes = [\n  { path: '', component: MapComponent, data: { title: 'Map Component' } },\n];\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavigationComponent,\n    MapComponent,\n    ParkDialogComponent,\n    TimePipe\n  ],\n  entryComponents: [\n    ParkDialogComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatSelectModule,\n    MatDialogModule,\n    MatSnackBarModule,\n    MatRadioModule,\n    NgxMapboxGLModule.withConfig({\n      accessToken: 'pk.eyJ1IjoiY2hlbHNlYWNhbmRlbG9yYSIsImEiOiJjam5ieWVpMDcwOTRxM3BvbDlqZGx4YXltIn0.v0C5haf-TS-noMhWkdTTYQ'\n    }),\n    RouterModule.forRoot(\n      appRoutes\n    ),\n    CustomMaterialModule\n  ],\n  providers: [\n    BackendService,\n    { provide: MAT_DIALOG_DATA, useValue: {} },\n    { provide: MAT_DIALOG_DEFAULT_OPTIONS, useValue: {hasBackdrop: false} }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import {NgModule} from \"@angular/core\";\nimport { CommonModule } from '@angular/common';\nimport {\n  MatButtonModule, MatNativeDateModule, MatIconModule, MatSidenavModule, MatListModule, MatToolbarModule} from '@angular/material';\n\n@NgModule({\n  imports: [CommonModule, MatButtonModule,MatToolbarModule, MatNativeDateModule, MatIconModule, MatSidenavModule, MatListModule],\n  exports: [CommonModule, MatButtonModule, MatToolbarModule, MatNativeDateModule, MatIconModule, MatSidenavModule, MatListModule],\n})\nexport class CustomMaterialModule { }\n","module.exports = \".park-option {\\n    width: 100%;\\n    padding-bottom: 3px;\\n}\"","module.exports = \"<h2 style=\\\"margin-bottom:0px;\\\" mat-dialog-title>What space did you park in?</h2>\\n<h5 class=\\\"mt-1\\\" *ngIf=\\\"errMsg\\\" style=\\\"color: red;font-size:medium;margin-bottom: 0px;\\\" mat-dialog-title> {{errMsg}} </h5>\\n<mat-dialog-content>\\n    <mat-radio-group class=\\\"example-radio-group\\\" [(ngModel)]=\\\"decals\\\" multiple required>\\n        <mat-radio-button class=\\\"park-option\\\" *ngFor=\\\"let decal of decalList\\\" [value]=\\\"decal.value\\\" [checked]=\\\"decalList[0] == decal\\\">{{decal.name}}</mat-radio-button>\\n    </mat-radio-group>\\n</mat-dialog-content>\\n<mat-dialog-actions>\\n  <button mat-button mat-dialog-close>Cancel</button>\\n  <!-- The mat-dialog-close directive optionally accepts a value as a result for the dialog. -->\\n  <button mat-button (click)=\\\"onParkClick()\\\">Park</button>\\n</mat-dialog-actions>\"","import { Component, Inject, OnChanges } from '@angular/core';\nimport { BackendService } from '../services/backend.service';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { MatSnackBar } from '@angular/material';\n\n@Component({\n  selector: 'app-park-dialog',\n  styleUrls: ['./dialog.component.css'],\n  templateUrl: './dialog.component.html',\n})\nexport class ParkDialogComponent implements OnChanges {\n    lut = [{name: 'Green', value: 'green' },\n            { name: 'Park & Ride', value: 'parkNRide' },\n            { name: 'Red 1', value: 'red1' },\n            { name: 'Red 3', value: 'red3' },\n            { name: 'Brown', value: 'brown' },\n            { name: 'Disabled', value: 'handicap' },\n            { name: 'Motorcycle/Scooter', value: 'scooter' },\n            { name: 'Gold', value: 'gold' },\n            { name: 'Silver', value: 'silver' },\n            { name: 'Official Business', value: 'business' },\n            { name: 'Orange', value: 'orange' },\n            { name: 'Blue', value: 'blue' },\n            { name: 'Medical Resident', value: 'medRes' },\n            { name: 'Staff Commuter', value: 'staffComm' },\n            { name: 'Disabled', value: 'disabled' },\n            { name: 'Carpool', value: 'carpool' },\n            { name: 'Motorcycle/Scooter', value: 'scooter' },\n            { name: 'Orange/Blue', value: 'orangeBlue' },\n            { name: 'Any', value: 'any' }];\n    decalList = [];\n    decals = null;\n    errMsg = '';\n    selectedGarage;\n\n    constructor(public dialogRef: MatDialogRef<ParkDialogComponent>,\n                    @Inject(MAT_DIALOG_DATA) public data: any,\n                    private backendService: BackendService,\n                    public snackBar: MatSnackBar) {\n        // Don't open modal if no garage data\n        if (data.garageDecals === undefined) {\n            return;\n        }\n\n        this.selectedGarage = data.garageDecals;\n\n        // Iterate through decals and retrieve user friendly names\n        data.garageDecals.decals.forEach((ele, ind) => {\n            if (data.permissions.length === 0 || data.permissions.includes(ele.name)) {\n                this.lut.some((d) => {\n                    if (d.value === ele.name) {\n                        this.decalList.push(d);\n                        return true;\n                    }\n                });\n            }\n        });\n\n        this.decalList.sort(function(a, b) { return a.name < b.name ? -1 : a.name === b.name ? 0 : 1; });\n    }\n\n    // Update decal list when user changes decal settings\n    ngOnChanges(changes) {\n        if (changes.permissions) {\n            if (changes.permissions.currentValue.length > 0) {\n                this.decalList = changes.permission;\n                this.decalList.sort(function(a, b) { return a.name < b.name ? -1 : a.name === b.name ? 0 : 1; });\n            }\n        }\n    }\n\n    // On click handler for park button\n    onParkClick() {\n        // Decal seletion required\n        if (!this.decals) {\n            this.errMsg = '*required';\n            return false;\n        } else {\n            // Create request to update occupancy data in backend\n            this.backendService.addOccupancy({name: this.data.garageDecals.name, decal: this.decals, park: true}).subscribe((res: any) => {\n                if (typeof(Storage) !== 'undefined') {\n                    localStorage.setItem('parked', JSON.stringify({\n                        'garage': this.selectedGarage,\n                        'decal': { name: this.data.garageDecals.name, decal: this.decals, park: false },\n                        'parked': false\n                    }));\n                    this.snackBar.open('You have successfully parked!', '', {\n                        duration: 2000,\n                    });\n                }\n            });\n            this.dialogRef.close();\n            return true;\n        }\n    }\n}\n","module.exports = \"mgl-map {\\n  height: 100vh;\\n  width: 100vw;\\n}\\n\\n.menu {\\n  position: absolute;\\n  padding: 8px;\\n}\\n\\n.bigtext\\n{\\n  font-size:24px;\\n  -webkit-text-stroke:1.5px;\\n}\\n\\n.btn-primary {\\n  background-color: rgb(0, 33, 165);\\n  color: white;\\n  border-radius: 5px;\\n  width: 50%;\\n  height: 30px;\\n}\\n\\n.btn-secondary {\\n  background-color: rgb(110, 135, 231);\\n  color: white;\\n  border-radius: 5px;\\n  width: 75%;\\n  height: 30px;\\n}\\n\\n.disabled {\\n  pointer-events: none;\\n}\"","module.exports = \"<mgl-map\\n[style]=\\\"'mapbox://styles/chelseacandelora/cjp4ek7n13wq22ro23s7vf8fg'\\\"\\n[zoom]=\\\"[13.6]\\\"\\n[center]=\\\"[-82.3489, 29.6400]\\\"\\n[cursorStyle]=\\\"cursorStyle\\\">\\n<mgl-control mglNavigation></mgl-control>\\n<mgl-geojson-source\\n  id=\\\"points\\\"\\n  [data]=\\\"points\\\">\\n</mgl-geojson-source>\\n<mgl-layer\\n  id=\\\"points\\\"\\n  source=\\\"points\\\"\\n  type=\\\"symbol\\\"\\n  [layout]=\\\"{\\n    'icon-image': 'marker-carsnew',\\n    'icon-allow-overlap': true\\n  }\\\"\\n  (click)=\\\"onClick($event)\\\"\\n  (mouseEnter)=\\\"cursorStyle = 'pointer'\\\"\\n  (mouseLeave)=\\\"cursorStyle = ''\\\">\\n</mgl-layer>\\n<mgl-popup\\n  *ngIf=\\\"selectedPoint\\\"\\n  [lngLat]=\\\"selectedPoint.geometry.coordinates\\\"\\n  (close)=\\\"selectedPoint = null\\\" >\\n  <div style=\\\"text-align:center;min-width:90px;\\\">\\n    <span [innerHTML]=\\\"selectedPoint.properties.name\\\"></span>\\n    <br>\\n    <span [ngClass]=\\\"'bigtext'\\\" [style.color] = \\\"selectedPoint.properties.color\\\" [innerHTML]=\\\"selectedPoint.properties.capacity\\\" style=\\\"padding-left:10%;\\\">\\n    </span>%\\n    <br>\\n    <button (click)=\\\"openAddFileDialog()\\\" class=\\\"btn btn-primary\\\" id=\\\"park-btn\\\" role=\\\"button\\\" aria-pressed=\\\"true\\\" *ngIf=\\\"!parked\\\">Park</button>\\n    <button class=\\\"btn btn-secondary disabled\\\" id=\\\"park-btn\\\" role=\\\"button\\\" *ngIf=\\\"parked\\\"><s>Parked</s></button>\\n  </div>\\n</mgl-popup>\\n</mgl-map>\"","import { Component, ChangeDetectorRef, Input, OnChanges, EventEmitter, Output } from '@angular/core';\nimport { MapMouseEvent } from 'mapbox-gl';\nimport { BackendService } from '../services/backend.service';\nimport { HttpClient } from '@angular/common/http';\nimport { MatDialog, MatDialogRef } from '@angular/material';\nimport { ParkDialogComponent } from '../dialog/dialog.component';\n\n@Component({\n  selector: 'app-map',\n  styleUrls: ['./map.component.css'],\n  templateUrl: './map.component.html'\n})\n\nexport class MapComponent implements OnChanges {\n  closed = true;\n  selectedGarage: any;\n  points: GeoJSON.FeatureCollection<GeoJSON.Point>;\n  selectedPoint: GeoJSON.Feature<GeoJSON.Point> | null;\n  cursorStyle: string;\n  parkDialogRef: MatDialogRef<ParkDialogComponent>;\n\n  @Input() parked;\n  @Input() permissions;\n  @Output() garageSelected = new EventEmitter<boolean>();\n  @Output() dialogClosed = new EventEmitter<boolean>();\n\n  constructor(private changeDetectorRef: ChangeDetectorRef,\n    private http: HttpClient,\n    private backendService: BackendService,\n    private dialog: MatDialog) {\n    this.showPoints();\n  }\n\n  // Load in garage points\n  showPoints() {\n    this.backendService.getGaragesMapbox().subscribe((mapboxData: GeoJSON.FeatureCollection<GeoJSON.Point>) => {\n      this.points = mapboxData;\n    });\n  }\n\n  // Called to open park dialog\n  openAddFileDialog() {\n    // Make sure not to open more than one dialog at a time\n    if (this.closed) {\n      if (this.selectedPoint.properties.capacity === 100) {\n        alert('Parking lot is full!');\n      } else {\n        this.closed = false;\n        this.parkDialogRef = this.dialog.open(ParkDialogComponent, {\n          data: {\n            garageDecals: this.selectedGarage,\n            permissions: this.permissions\n          }\n        });\n        this.parkDialogRef.afterClosed().subscribe((event) => {\n          // Reset reentrancy var\n          this.closed = true;\n          this.dialogClosed.emit();\n          this.garageSelected.emit(this.selectedGarage);\n        });\n      }\n    }\n  }\n\n  // On user settings change update garage points on map\n  ngOnChanges(changes) {\n    if (changes.permissions) {\n      this.selectedPoint = null;\n      // If the user has decals selected\n      if (changes.permissions.currentValue.length > 0) {\n        this.backendService.getFilteredGaragesMapbox(this.permissions).subscribe((mapboxData: GeoJSON.FeatureCollection<GeoJSON.Point>) => {\n          this.points = mapboxData;\n        });\n      } else {\n        this.showPoints();\n      }\n    }\n  }\n\n  // Set the selected garage when user clicks point\n  onClick(evt: MapMouseEvent) {\n    this.selectedPoint = null;\n    this.changeDetectorRef.detectChanges();\n    this.selectedPoint = (<any>evt).features[0];\n    // Get garage data from backend\n    this.backendService.getGarage(this.selectedPoint.properties.id).subscribe((garage: any) => {\n      this.selectedGarage = garage;\n      this.garageSelected.emit(this.selectedGarage);\n    });\n  }\n}\n","module.exports = \"\\n.example-container {\\n  height: 100%;\\n}\\n.mat-sidenav {\\n  padding: 30px;\\n  width: 240px;\\n}\\n.blue\\n{\\n  background-color: rgb(0, 82, 155);\\n}\\n.orange\\n{\\n  color: rgb(188, 88, 26);\\n}\\n.placeholder\\n{\\n  color: rgb(0, 82, 155);\\n}\\n.orangeline\\n{\\n  background-color: rgb(188, 88, 26);\\n  height: 5px;\\n}\\n.center{\\n  background:url('/assets/uf-parking.svg');\\n  background-size:cover;\\n}\\n.btn-warn {\\n  background-color: rgb(185, 44, 44);\\n  border-color: rgb(185, 44, 44);\\n  color: white;\\n  height: 200px;\\n  border-radius: 15px;\\n  padding-left: 40px;\\n  padding-right: 40px;\\n  padding-top: 20px;\\n  padding-bottom: 20px;\\n  pointer-events: all;\\n  cursor: pointer;\\n}\\n.btn-float {\\n  position: absolute;\\n  height: 100px;\\n  width: 200px;\\n  font-size: 30px;\\n  bottom: 13%;\\n}\\n.btn-container {\\n  pointer-events: none;\\n  position: absolute;\\n  width: 100%;\\n  height: 100%;\\n  z-index: 2;\\n}\\n@-webkit-keyframes glowing {\\n  0% { box-shadow: 0 0 -10px #c40000; }\\n  40% { box-shadow: 0 0 50px #c40000; }\\n  60% { box-shadow: 0 0 50px #c40000; }\\n  100% { box-shadow: 0 0 -10px #c40000; }\\n}\\n@keyframes glowing {\\n  0% { box-shadow: 0 0 -10px #c40000; }\\n  40% { box-shadow: 0 0 50px #c40000; }\\n  60% { box-shadow: 0 0 50px #c40000; }\\n  100% { box-shadow: 0 0 -10px #c40000; }\\n}\\n.pulse-red {\\n  -webkit-animation: glowing 3000ms infinite;\\n          animation: glowing 3000ms infinite;\\n}\"","module.exports = \"<mat-toolbar color=\\\"primary\\\" class=\\\"blue\\\" class=\\\"center\\\">\\n  <img src=\\\"assets/uf-parking.svg\\\" style=\\\"display:none;\\\">\\n  <mat-toolbar-row>\\n    <button type=\\\"button\\\" aria-label=\\\"Toggle sidenav\\\" mat-icon-button (click)=\\\"drawer.toggle()\\\" color=\\\"warn\\\" class=\\\"orange\\\">\\n      <mat-icon aria-label=\\\"Side nav toggle icon\\\">menu</mat-icon>\\n    </button>\\n    <!-- <span>Parking Picker</span> -->\\n    <!-- <span><img src=\\\"./assets/UF-parkingpicker.png\\\"></span> -->\\n  </mat-toolbar-row>\\n</mat-toolbar>\\n<mat-toolbar color=\\\"primary\\\" class=\\\"orangeline\\\"></mat-toolbar>\\n\\n<mat-sidenav-container class=\\\"example-container\\\" (click)=\\\"updateParked()\\\">\\n  <mat-sidenav #drawer mode=\\\"side\\\" opened role=\\\"navigation\\\" style=\\\"width: 275px; z-index: 3;\\\">\\n    <mat-form-field color=\\\"warn\\\" class=\\\"placeholder\\\">\\n      <mat-select placeholder=\\\"Student\\\" [formControl]=\\\"decals\\\" multiple >\\n        <mat-option (click) = \\\"updateSettings()\\\" *ngFor=\\\"let decal of decalList\\\" [value]=\\\"decal.value\\\">{{decal.name}}</mat-option>\\n      </mat-select>\\n    </mat-form-field>\\n    <br>\\n    <mat-form-field color=\\\"warn\\\" class=\\\"placeholder\\\">\\n      <mat-select placeholder=\\\"Faculty & Staff\\\" [formControl]=\\\"decals\\\" multiple>\\n        <mat-option (click) = \\\"updateSettings()\\\" *ngFor=\\\"let decal of decalList1\\\" [value]=\\\"decal.value\\\">{{decal.name}}</mat-option>\\n      </mat-select>\\n    </mat-form-field>\\n    <br>\\n    <h3 class=\\\"mat-headline-1\\\" style=\\\"text-align: center;\\\">{{garage.name}}</h3>\\n    <div class=\\\"box flex\\\" style=\\\"justify-content: center; display: flex; padding-left: 20px;\\\">\\n      <img class=\\\"fas\\\" style=\\\"height: 20px; padding-right:20px;\\\" src=\\\"assets/parking-meter.svg\\\" *ngIf=\\\"garage.meter\\\">\\n      <i class=\\\"fas fa-car\\\" style=\\\"padding-right:20px;\\\" *ngIf=\\\"garage.name\\\"></i>\\n      <i class=\\\"fas fa-motorcycle\\\" style=\\\"padding-right:20px;\\\" *ngIf=\\\"garage.scooter\\\"></i>\\n      <img class=\\\"fas\\\" style=\\\"height: 14px; padding-right:20px;\\\" src=\\\"assets/battery.svg\\\" *ngIf=\\\"garage.electric\\\">\\n    </div>\\n    <mat-list role=\\\"list\\\">\\n      <mat-list-item role=\\\"listitem\\\" style=\\\"pointer-events: all; text-align: center;\\\" *ngFor=\\\"let decal of garage.decals\\\">\\n        <a matLine title=\\\"{{getDecalName(decal.name)}} - {{getOccupancy(decal.name)}}%\\\"><b>{{getDecalName(decal.name)}}</b> - <a [style.color]=\\\"getColor(getOccupancy(decal.name))\\\">{{getOccupancy(decal.name)}}%</a></a>\\n        <mat-divider></mat-divider>\\n        <a matLine>Mon - <a *ngIf=\\\"decal.restrictions.weekend\\\">Sun</a><a *ngIf=\\\"!decal.restrictions.weekend\\\">Fri</a></a>\\n        <a matLine *ngIf=\\\"!decal.restrictions.allDay\\\">{{decal.restrictions.startTime | time}} - {{decal.restrictions.endTime | time}}</a>\\n        <a matLine *ngIf=\\\"decal.restrictions.allDay\\\">ALL DAY</a>\\n      </mat-list-item>\\n    </mat-list>\\n  </mat-sidenav>\\n  <mat-sidenav-content style=\\\"max-height: 92vh;\\\">\\n    <div class=\\\"box flex btn-container\\\" style=\\\"justify-content: center; display: flex;\\\">\\n        <button class=\\\"btn btn-warn btn-float pulse-red\\\" (click)=\\\"onUnparkClick()\\\" type=\\\"button\\\" *ngIf=\\\"parked\\\">Unpark</button>\\n    </div>\\n    <app-map [permissions]=\\\"permissions\\\" [parked]=\\\"parked\\\" (garageSelected)=\\\"updateGarageInfo($event)\\\" (dialogClosed)=\\\"updateParked($event)\\\"></app-map>\\n  </mat-sidenav-content>\\n</mat-sidenav-container>\\n\"","import { Component, OnInit, Optional } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { BackendService } from '../services/backend.service';\nimport { MatSnackBar } from '@angular/material';\n\n@Component({\n  selector: 'app-navigation',\n  templateUrl: './navigation.component.html',\n  styleUrls: ['./navigation.component.css']\n})\nexport class NavigationComponent implements OnInit {\n  decals = new FormControl();\n  permissions = [];\n  garage = {};\n  decalList: Object[] = [{name: 'Green', value: 'green' },\n                        { name: 'Park & Ride', value: 'parkNRide' },\n                        { name: 'Red 1', value: 'red1' },\n                        { name: 'Red 3', value: 'red3' },\n                        { name: 'Brown', value: 'brown' },\n                        { name: 'Disabled', value: 'handicap' }];\n  decalList1: Object[] = [{name: 'Gold', value: 'gold' },\n                        { name: 'Silver', value: 'silver' },\n                        { name: 'Official Business', value: 'business' },\n                        { name: 'Orange', value: 'orange' },\n                        { name: 'Blue', value: 'blue' },\n                        { name: 'Medical Resident', value: 'medRes' },\n                        { name: 'Staff Commuter', value: 'staffComm' },\n                        { name: 'Disabled', value: 'handicap' },\n                        { name: 'Carpool', value: 'carpool' }];\n  lut = [{name: 'Green', value: 'green' },\n        { name: 'Park & Ride', value: 'parkNRide' },\n        { name: 'Red 1', value: 'red1' },\n        { name: 'Red 3', value: 'red3' },\n        { name: 'Brown', value: 'brown' },\n        { name: 'Disabled', value: 'handicap' },\n        { name: 'Motorcycle/Scooter', value: 'scooter' },\n        { name: 'Gold', value: 'gold' },\n        { name: 'Silver', value: 'silver' },\n        { name: 'Official Business', value: 'business' },\n        { name: 'Orange', value: 'orange' },\n        { name: 'Blue', value: 'blue' },\n        { name: 'Medical Resident', value: 'medRes' },\n        { name: 'Staff Commuter', value: 'staffComm' },\n        { name: 'Disabled', value: 'disabled' },\n        { name: 'Carpool', value: 'carpool' },\n        { name: 'Motorcycle/Scooter', value: 'scooter' },\n        { name: 'Orange/Blue', value: 'orangeBlue' },\n        { name: 'Any', value: 'any' },\n        { name: 'Gated', value: 'gated' },\n        { name: 'Any (not PNR)', value: 'anyNotPNR' },\n        { name: 'Brown/Green', value: 'brownGreen' },\n        { name: 'Orange/Blue/Medical/Business', value: 'OBMO' },\n        { name: 'Red/Green', value: 'redGreen' }];\n  occupancies = [];\n\n  constructor(private backendService: BackendService, public snackBar: MatSnackBar) { }\n\n  parked = false;\n\n  // Called when user clicks an input, update decal permissions\n  updateSettings() {\n    this.backendService.getFilteredDecalPermissions(this.decals.value).subscribe((permissions: any) => {\n      this.permissions = permissions;\n    });\n    if (typeof(Storage) !== 'undefined') {\n      localStorage.setItem('UserSettings', JSON.stringify(this.decals.value));\n    }\n    this.updateGarageInfo();\n  }\n\n  // Called to retrieve occupancy information of selected garage\n  updateGarageInfo(garage?) {\n    if (garage) {\n      this.garage = garage;\n    }\n    if (this.garage) {\n      this.backendService.getOccupanciesByName(this.garage['name']).subscribe((res: any) => {\n        this.occupancies = res.data;\n      });\n    }\n  }\n\n  // Retrieves the human readable decal name\n  getDecalName(decalName) {\n    const name = this.lut.find((ele) => {\n      return ele['value'] === decalName;\n    });\n    return name ? name.name : decalName;\n  }\n\n  // Retrieves the occupancy represented in percentage\n  getOccupancy(decalName) {\n    if (this.occupancies) {\n      const occupancy = this.occupancies.find((ele) => {\n        return ele.decal === decalName;\n      });\n      const total = this.garage['decals'].find((ele) => ele.name === decalName).specCapacity;\n      if (!occupancy) { return 0; }\n      return Math.ceil(occupancy.currOccupancy / total * 100);\n    }\n    return 0;\n  }\n\n  // Retrieves the color for occupancy percentage\n  getColor(capacity) {\n    if (capacity < 60) {\n      // Green\n      return '#48af48';\n    } else if (capacity < 85) {\n      // Yellow\n      return '#fde627';\n    } else {\n      // Red\n      return '#a53a3a';\n    }\n  }\n\n  updateParked() {\n    this.parked = JSON.parse(localStorage.getItem('parked')) ? true : false;\n  }\n\n  onUnparkClick() {\n    const parked = JSON.parse(localStorage.getItem('parked'));\n    this.backendService.addOccupancy(parked.decal).subscribe((res: any) => {\n      localStorage.removeItem('parked');\n      this.parked = false;\n      this.updateGarageInfo();\n      this.snackBar.open('Thank you for parking!', '', {\n        duration: 2000\n      });\n    });\n  }\n\n  ngOnInit() {\n    this.decals.setValue(JSON.parse(localStorage.getItem('UserSettings')));\n    if (JSON.parse(localStorage.getItem('parked'))) {\n      this.parked = true;\n    }\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n/*\n * Takes a time in military format and converts it to AM/PM\n * Usage:\n *   value | time\n * Example:\n *   {{ 07:30 | time }}\n *   formats to: 7:30 AM\n*/\n@Pipe({name: 'time'})\nexport class TimePipe implements PipeTransform {\n    transform(value: string): string {\n        let result = '';\n        const time = value.split(':');\n        const hour = parseInt(time[0], 10);\n        const minutes = parseInt(time[1], 10);\n        const AM = hour <= 12;\n        result += AM ? hour : (hour - 12);\n        result += ':' + minutes;\n        result += ' ';\n        result += AM ? 'AM' : 'PM';\n        return result;\n    }\n}","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n@Injectable()\nexport class BackendService {\n    baseURI = 'https://parking-picker.herokuapp.com';\n    mapboxConfigUrl = this.baseURI + '/api/garages/mapbox';\n    permissionsConfigUrl = this.baseURI + '/api/decals/';\n    garagesConfigUrl = this.baseURI + '/api/garages/';\n    occupancyConfigUrl = this.baseURI + '/api/occupancy';\n\n    constructor(private http: HttpClient) { }\n\n    // Gets all geojson garage data\n    public getGaragesMapbox() {\n        return this.http.get(this.mapboxConfigUrl);\n    }\n\n    // Gets geojson garage data based on passed decal types\n    public getFilteredGaragesMapbox(permissions) {\n        return this.http.post(this.mapboxConfigUrl, { decals: permissions });\n    }\n\n    // Gets decal permission of passed decals\n    public getFilteredDecalPermissions(decals) {\n        return this.http.post(this.permissionsConfigUrl, { decals: decals });\n    }\n\n    // Gets garage data based on id\n    public getGarage(id) {\n        return this.http.get(this.garagesConfigUrl + id);\n    }\n\n    // Gets all garage data\n    public getAllGarages() {\n        return this.http.get(this.garagesConfigUrl);\n    }\n\n    // Get garages based on passed decal types\n    public getGarages(decals) {\n        return this.http.post(this.garagesConfigUrl, { decals: decals });\n    }\n\n    // Get all occupancy data\n    public getOccupancies() {\n        return this.http.get(this.occupancyConfigUrl);\n    }\n\n    // Get occupancy of garage by name\n    public getOccupanciesByName(garageName) {\n        return this.http.get(this.occupancyConfigUrl + '/' + garageName);\n    }\n\n    // Posts request to increment occupancy of decal spaces in garage specified\n    public addOccupancy(occupancy) {\n        return this.http.post(this.occupancyConfigUrl, { occupancy: occupancy });\n    }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n"],"sourceRoot":""}