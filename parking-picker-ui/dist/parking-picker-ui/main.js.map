{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/core/material.module.ts","webpack:///./src/app/dialog/dialog.component.css","webpack:///./src/app/dialog/dialog.component.html","webpack:///./src/app/dialog/dialog.component.ts","webpack:///./src/app/map/map.component.css","webpack:///./src/app/map/map.component.html","webpack:///./src/app/map/map.component.ts","webpack:///./src/app/navigation/navigation.component.css","webpack:///./src/app/navigation/navigation.component.html","webpack:///./src/app/navigation/navigation.component.ts","webpack:///./src/app/pipes/time.pipe.ts","webpack:///./src/app/services/backend.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<link rel=\\\"stylesheet\\\" href=\\\"https://use.fontawesome.com/releases/v5.5.0/css/all.css\\\" integrity=\\\"sha384-B4dIYHKNBt8Bc12p+WXckhzcICo0wtJAoU8YZTY5qE0Id1GSseTk6S+L3BlXeVIU\\\" crossorigin=\\\"anonymous\\\">\\r\\n<app-navigation></app-navigation>\\r\\n\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'parking-picker-ui';\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { AppComponent } from './app.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { NavigationComponent } from './navigation/navigation.component';\r\nimport { MapComponent } from './map/map.component';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { CustomMaterialModule } from './core/material.module';\r\nimport { NgxMapboxGLModule } from 'ngx-mapbox-gl';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { BackendService } from './services/backend.service';\r\nimport { MatDialogModule } from '@angular/material';\r\nimport { MAT_DIALOG_DATA } from '@angular/material';\r\nimport { MAT_DIALOG_DEFAULT_OPTIONS } from '@angular/material';\r\nimport { ParkDialogComponent } from './dialog/dialog.component';\r\nimport { TimePipe } from './pipes/time.pipe';\r\nimport { MatRadioModule } from '@angular/material';\r\n\r\nconst appRoutes: Routes = [\r\n  { path: '', component: MapComponent, data: { title: 'Map Component' } },\r\n];\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    NavigationComponent,\r\n    MapComponent,\r\n    ParkDialogComponent,\r\n    TimePipe\r\n  ],\r\n  entryComponents: [\r\n    ParkDialogComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MatSelectModule,\r\n    MatDialogModule,\r\n    MatRadioModule,\r\n    NgxMapboxGLModule.withConfig({\r\n      accessToken: 'pk.eyJ1IjoiY2hlbHNlYWNhbmRlbG9yYSIsImEiOiJjam5ieWVpMDcwOTRxM3BvbDlqZGx4YXltIn0.v0C5haf-TS-noMhWkdTTYQ'\r\n    }),\r\n    RouterModule.forRoot(\r\n      appRoutes\r\n    ),\r\n    CustomMaterialModule\r\n  ],\r\n  providers: [\r\n    BackendService,\r\n    { provide: MAT_DIALOG_DATA, useValue: {} },\r\n    { provide: MAT_DIALOG_DEFAULT_OPTIONS, useValue: {hasBackdrop: false} }\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import {NgModule} from \"@angular/core\";\r\nimport { CommonModule } from '@angular/common';\r\nimport {\r\n  MatButtonModule, MatNativeDateModule, MatIconModule, MatSidenavModule, MatListModule, MatToolbarModule} from '@angular/material';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, MatButtonModule,MatToolbarModule, MatNativeDateModule, MatIconModule, MatSidenavModule, MatListModule],\r\n  exports: [CommonModule, MatButtonModule, MatToolbarModule, MatNativeDateModule, MatIconModule, MatSidenavModule, MatListModule],\r\n})\r\nexport class CustomMaterialModule { }\r\n","module.exports = \".park-option {\\r\\n    width: 100%;\\r\\n    padding-bottom: 3px;\\r\\n}\"","module.exports = \"<h2 style=\\\"margin-bottom:0px;\\\" mat-dialog-title>What space did you park in?</h2>\\r\\n<h5 class=\\\"mt-1\\\" *ngIf=\\\"errMsg\\\" style=\\\"color: red;font-size:medium;margin-bottom: 0px;\\\" mat-dialog-title> {{errMsg}} </h5>\\r\\n<mat-dialog-content>\\r\\n    <mat-radio-group class=\\\"example-radio-group\\\" [(ngModel)]=\\\"decals\\\" multiple required>\\r\\n        <mat-radio-button class=\\\"park-option\\\" *ngFor=\\\"let decal of decalList\\\" [value]=\\\"decal.value\\\" [checked]=\\\"decalList[0] == decal\\\">{{decal.name}}</mat-radio-button>\\r\\n    </mat-radio-group>\\r\\n</mat-dialog-content>\\r\\n<mat-dialog-actions>\\r\\n  <button mat-button mat-dialog-close>Cancel</button>\\r\\n  <!-- The mat-dialog-close directive optionally accepts a value as a result for the dialog. -->\\r\\n  <button mat-button (click)=\\\"onParkClick()\\\">Park</button>\\r\\n</mat-dialog-actions>\"","import { Component, Inject, OnChanges } from '@angular/core';\r\nimport { BackendService } from '../services/backend.service';\r\nimport { FormControl } from '@angular/forms';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\r\n\r\n@Component({\r\n  selector: 'app-park-dialog',\r\n  styleUrls: ['./dialog.component.css'],\r\n  templateUrl: './dialog.component.html',\r\n})\r\nexport class ParkDialogComponent implements OnChanges {\r\n    lut = [{name: 'Green', value: 'green' },\r\n            { name: 'Park & Ride', value: 'parkNRide' },\r\n            { name: 'Red 1', value: 'red1' },\r\n            { name: 'Red 3', value: 'red3' },\r\n            { name: 'Brown', value: 'brown' },\r\n            { name: 'Disabled', value: 'handicap' },\r\n            { name: 'Motorcycle/Scooter', value: 'scooter' },\r\n            { name: 'Gold', value: 'gold' },\r\n            { name: 'Silver', value: 'silver' },\r\n            { name: 'Official Business', value: 'business' },\r\n            { name: 'Orange', value: 'orange' },\r\n            { name: 'Blue', value: 'blue' },\r\n            { name: 'Medical Resident', value: 'medRes' },\r\n            { name: 'Staff Commuter', value: 'staffComm' },\r\n            { name: 'Disabled', value: 'disabled' },\r\n            { name: 'Carpool', value: 'carpool' },\r\n            { name: 'Motorcycle/Scooter', value: 'scooter' },\r\n            { name: 'Orange/Blue', value: 'orangeBlue' },\r\n            { name: 'Any', value: 'any' }];\r\n    decalList = [];\r\n    decals = null;\r\n    errMsg = '';\r\n\r\n    constructor(public dialogRef: MatDialogRef<ParkDialogComponent>,\r\n                    @Inject(MAT_DIALOG_DATA) public data: any,\r\n                    private backendService: BackendService) {\r\n        // Don't open modal if no garage data\r\n        if (data.garageDecals === undefined) {\r\n            return;\r\n        }\r\n\r\n        // Iterate through decals and retrieve user friendly names\r\n        data.garageDecals.decals.forEach((ele, ind) => {\r\n            if (data.permissions.length === 0 || data.permissions.includes(ele.name)) {\r\n                this.lut.some((d) => {\r\n                    if (d.value === ele.name) {\r\n                        this.decalList.push(d);\r\n                        return true;\r\n                    }\r\n                });\r\n            }\r\n        });\r\n\r\n        this.decalList.sort(function(a, b) { return a.name < b.name ? -1 : a.name === b.name ? 0 : 1; });\r\n    }\r\n\r\n    // Update decal list when user changes decal settings\r\n    ngOnChanges(changes) {\r\n        if (changes.permissions) {\r\n            if (changes.permissions.currentValue.length > 0) {\r\n                this.decalList = changes.permission;\r\n                this.decalList.sort(function(a, b) { return a.name < b.name ? -1 : a.name === b.name ? 0 : 1; });\r\n            }\r\n        }\r\n    }\r\n\r\n    // On click handler for park button\r\n    onParkClick() {\r\n        // Decal seletion required\r\n        if (!this.decals) {\r\n            this.errMsg = '*required';\r\n            return false;\r\n        } else {\r\n            // Create request to update occupancy data in backend\r\n            this.backendService.addOccupancy({name: this.data.garageDecals.name, decal: this.decals, park: true}).subscribe((res: any) => {\r\n            });\r\n            this.dialogRef.close();\r\n            return true;\r\n        }\r\n    }\r\n}\r\n","module.exports = \"/* :host {\\r\\n  display: flex;\\r\\n  flex: 1;\\r\\n} */\\r\\nmgl-map {\\r\\n  height: 100vh;\\r\\n  width: 100vw;\\r\\n}\\r\\n.menu {\\r\\n  position: absolute;\\r\\n  padding: 8px;\\r\\n}\\r\\n.bigtext\\r\\n{\\r\\n  font-size:24px;\\r\\n  -webkit-text-stroke:1.5px;\\r\\n}\\r\\n.btn-primary {\\r\\n  background-color: rgb(0, 33, 165);\\r\\n  color: white;\\r\\n  border-radius: 5px;\\r\\n  width: 50%;\\r\\n  height: 30px;\\r\\n}\"","module.exports = \"<mgl-map\\r\\n[style]=\\\"'mapbox://styles/mapbox/streets-v9'\\\"\\r\\n[zoom]=\\\"[13]\\\"\\r\\n[center]=\\\"[-82.3549, 29.6436]\\\"\\r\\n[cursorStyle]=\\\"cursorStyle\\\">\\r\\n<mgl-geojson-source\\r\\n  id=\\\"points\\\"\\r\\n  [data]=\\\"points\\\">\\r\\n</mgl-geojson-source>\\r\\n<mgl-layer\\r\\n  id=\\\"points\\\"\\r\\n  source=\\\"points\\\"\\r\\n  type=\\\"symbol\\\"\\r\\n  [layout]=\\\"{\\r\\n    'icon-image': 'circle-15',\\r\\n    'icon-allow-overlap': true\\r\\n  }\\\"\\r\\n  (click)=\\\"onClick($event)\\\"\\r\\n  (mouseEnter)=\\\"cursorStyle = 'pointer'\\\"\\r\\n  (mouseLeave)=\\\"cursorStyle = ''\\\">\\r\\n</mgl-layer>\\r\\n<mgl-popup\\r\\n  *ngIf=\\\"selectedPoint\\\"\\r\\n  [lngLat]=\\\"selectedPoint.geometry.coordinates\\\"\\r\\n  (close)=\\\"selectedPoint = null\\\" >\\r\\n  <div style=\\\"text-align:center;min-width:90px;\\\">\\r\\n    <span [innerHTML]=\\\"selectedPoint.properties.name\\\"></span>\\r\\n    <br>\\r\\n    <span [ngClass]=\\\"'bigtext'\\\" [style.color] = \\\"selectedPoint.properties.color\\\" [innerHTML]=\\\"selectedPoint.properties.capacity\\\" style=\\\"padding-left:10%;\\\">\\r\\n    </span>%\\r\\n    <br>\\r\\n    <button (click)=\\\"openAddFileDialog()\\\" class=\\\"btn btn-primary\\\" id=\\\"park-btn\\\" role=\\\"button\\\" aria-pressed=\\\"true\\\">Park</button>\\r\\n  </div>\\r\\n</mgl-popup>\\r\\n</mgl-map>\"","import { Component, ChangeDetectorRef, Input, OnChanges, EventEmitter, Output } from '@angular/core';\r\nimport { MapMouseEvent } from 'mapbox-gl';\r\nimport { BackendService } from '../services/backend.service';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { MatDialog, MatDialogRef } from '@angular/material';\r\nimport { ParkDialogComponent } from '../dialog/dialog.component';\r\n\r\n@Component({\r\n  selector: 'app-map',\r\n  styleUrls: ['./map.component.css'],\r\n  templateUrl: './map.component.html'\r\n})\r\n\r\nexport class MapComponent implements OnChanges {\r\n  closed = true;\r\n  selectedGarage: any;\r\n  points: GeoJSON.FeatureCollection<GeoJSON.Point>;\r\n  selectedPoint: GeoJSON.Feature<GeoJSON.Point> | null;\r\n  cursorStyle: string;\r\n  parkDialogRef: MatDialogRef<ParkDialogComponent>;\r\n\r\n  @Input() permissions;\r\n  @Output() garageSelected = new EventEmitter<boolean>();\r\n\r\n  constructor(private changeDetectorRef: ChangeDetectorRef,\r\n    private http: HttpClient,\r\n    private backendService: BackendService,\r\n    private dialog: MatDialog) {\r\n    this.showPoints();\r\n  }\r\n\r\n  // Load in garage points\r\n  showPoints() {\r\n    this.backendService.getGaragesMapbox().subscribe((mapboxData: GeoJSON.FeatureCollection<GeoJSON.Point>) => {\r\n      this.points = mapboxData;\r\n    });\r\n  }\r\n\r\n  // Called to open park dialog\r\n  openAddFileDialog() {\r\n    // Make sure not to open more than one dialog at a time\r\n    if (this.closed) {\r\n      if (this.selectedPoint.properties.capacity === 100) {\r\n        alert('Parking lot is full!');\r\n      } else {\r\n        this.closed = false;\r\n        this.parkDialogRef = this.dialog.open(ParkDialogComponent, {\r\n          data: {\r\n            garageDecals: this.selectedGarage,\r\n            permissions: this.permissions\r\n          }\r\n        });\r\n        this.parkDialogRef.afterClosed().subscribe((event) => {\r\n          // Reset reentrancy var\r\n          this.closed = true;\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  // On user settings change update garage points on map\r\n  ngOnChanges(changes) {\r\n    if (changes.permissions) {\r\n      // If the user has decals selected\r\n      if (changes.permissions.currentValue.length > 0) {\r\n        this.backendService.getFilteredGaragesMapbox(this.permissions).subscribe((mapboxData: GeoJSON.FeatureCollection<GeoJSON.Point>) => {\r\n          this.points = mapboxData;\r\n        });\r\n      } else {\r\n        this.showPoints();\r\n      }\r\n    }\r\n  }\r\n\r\n  // Set the selected garage when user clicks point\r\n  onClick(evt: MapMouseEvent) {\r\n    this.selectedPoint = null;\r\n    this.changeDetectorRef.detectChanges();\r\n    this.selectedPoint = (<any>evt).features[0];\r\n    // Get garage data from backend\r\n    this.backendService.getGarage(this.selectedPoint.properties.id).subscribe((garage: any) => {\r\n      this.selectedGarage = garage;\r\n      this.garageSelected.emit(this.selectedGarage);\r\n    });\r\n  }\r\n}\r\n","module.exports = \".example-container {\\r\\n  height: 100%;\\r\\n}\\r\\n.mat-sidenav {\\r\\n  padding: 30px;\\r\\n  width: 240px;\\r\\n}\\r\\n.blue\\r\\n{\\r\\n  background-color: rgb(0, 33, 165);\\r\\n}\\r\\n.orange\\r\\n{\\r\\n  color: rgb(250, 70, 22);\\r\\n}\\r\\n.placeholder\\r\\n{\\r\\ncolor: rgb(0, 33, 165);\\r\\n}\\r\\n\"","module.exports = \"<mat-toolbar color=\\\"primary\\\" class=\\\"blue\\\">\\r\\n  <mat-toolbar-row>\\r\\n    <button type=\\\"button\\\" aria-label=\\\"Toggle sidenav\\\" mat-icon-button (click)=\\\"drawer.toggle()\\\" color=\\\"warn\\\" class=\\\"orange\\\">\\r\\n      <mat-icon aria-label=\\\"Side nav toggle icon\\\">menu</mat-icon>\\r\\n    </button>\\r\\n    <span>Parking Picker</span>\\r\\n    <!-- <span><img src=\\\"./assets/parkingpicker.png\\\"></span> -->\\r\\n  </mat-toolbar-row>\\r\\n</mat-toolbar>\\r\\n<mat-sidenav-container class=\\\"example-container\\\">\\r\\n  <mat-sidenav #drawer mode=\\\"side\\\" opened role=\\\"navigation\\\" style=\\\"width: 275px;\\\">\\r\\n    <mat-nav-list>\\r\\n      <mat-form-field color=\\\"warn\\\" class=\\\"placeholder\\\">\\r\\n        <mat-select placeholder=\\\"Student\\\" [formControl]=\\\"decals\\\" multiple >\\r\\n          <mat-option (click) = \\\"updateSettings()\\\" *ngFor=\\\"let decal of decalList\\\" [value]=\\\"decal.value\\\">{{decal.name}}</mat-option>\\r\\n        </mat-select>\\r\\n      </mat-form-field>\\r\\n      <br>\\r\\n      <mat-form-field color=\\\"warn\\\" class=\\\"placeholder\\\">\\r\\n        <mat-select placeholder=\\\"Faculty & Staff\\\" [formControl]=\\\"decals\\\" multiple>\\r\\n          <mat-option (click) = \\\"updateSettings()\\\" *ngFor=\\\"let decal of decalList1\\\" [value]=\\\"decal.value\\\">{{decal.name}}</mat-option>\\r\\n        </mat-select>\\r\\n      </mat-form-field>\\r\\n      <br>\\r\\n      <h3 class=\\\"mat-headline-1\\\" style=\\\"text-align: center;\\\">{{garage.name}}</h3>\\r\\n      <div class=\\\"box flex\\\" style=\\\"justify-content: center; display: flex; padding-left: 20px;\\\">\\r\\n        <img class=\\\"fas\\\" style=\\\"height: 20px; padding-right:20px;\\\" src=\\\"assets/parking-meter.svg\\\" *ngIf=\\\"garage.meter\\\">\\r\\n        <i class=\\\"fas fa-car\\\" style=\\\"padding-right:20px;\\\" *ngIf=\\\"garage.name\\\"></i>\\r\\n        <i class=\\\"fas fa-motorcycle\\\" style=\\\"padding-right:20px;\\\" *ngIf=\\\"garage.scooter\\\"></i>\\r\\n        <img class=\\\"fas\\\" style=\\\"height: 14px; padding-right:20px;\\\" src=\\\"assets/battery.svg\\\" *ngIf=\\\"garage.electric\\\">\\r\\n      </div>\\r\\n      <mat-list>\\r\\n        <mat-list-item style=\\\"pointer-events: none; text-align: center;\\\" *ngFor=\\\"let decal of garage.decals\\\">\\r\\n          <a matLine><b>{{getDecalName(decal.name)}}</b> - <a [style.color]=\\\"getColor(getOccupancy(decal.name))\\\">{{getOccupancy(decal.name)}}%</a></a>\\r\\n          <mat-divider></mat-divider>\\r\\n          <a matLine>Mon - <a *ngIf=\\\"decal.restrictions.weekend\\\">Sun</a><a *ngIf=\\\"!decal.restrictions.weekend\\\">Fri</a></a>\\r\\n          <a matLine *ngIf=\\\"!decal.restrictions.allDay\\\">{{decal.restrictions.startTime | time}} - {{decal.restrictions.endTime | time}}</a>\\r\\n          <a matLine *ngIf=\\\"decal.restrictions.allDay\\\">ALL DAY</a>\\r\\n        </mat-list-item>\\r\\n      </mat-list>\\r\\n    </mat-nav-list>\\r\\n  </mat-sidenav>\\r\\n  <mat-sidenav-content style=\\\"max-height: 92vh;\\\">\\r\\n    <app-map [permissions]='permissions' (garageSelected)=\\\"updateGarageInfo($event)\\\"></app-map>\\r\\n  </mat-sidenav-content>\\r\\n</mat-sidenav-container>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\nimport { BackendService } from '../services/backend.service';\r\n\r\n@Component({\r\n  selector: 'app-navigation',\r\n  templateUrl: './navigation.component.html',\r\n  styleUrls: ['./navigation.component.css']\r\n})\r\nexport class NavigationComponent implements OnInit {\r\n  decals = new FormControl();\r\n  permissions = [];\r\n  garage = {};\r\n  decalList: Object[] = [{name: 'Green', value: 'green' },\r\n                        { name: 'Park & Ride', value: 'parkNRide' },\r\n                        { name: 'Red 1', value: 'red1' },\r\n                        { name: 'Red 3', value: 'red3' },\r\n                        { name: 'Brown', value: 'brown' },\r\n                        { name: 'Disabled', value: 'handicap' }];\r\n  decalList1: Object[] = [{name: 'Gold', value: 'gold' },\r\n                        { name: 'Silver', value: 'silver' },\r\n                        { name: 'Official Business', value: 'business' },\r\n                        { name: 'Orange', value: 'orange' },\r\n                        { name: 'Blue', value: 'blue' },\r\n                        { name: 'Medical Resident', value: 'medRes' },\r\n                        { name: 'Staff Commuter', value: 'staffComm' },\r\n                        { name: 'Disabled', value: 'handicap' },\r\n                        { name: 'Carpool', value: 'carpool' }];\r\n  lut = [{name: 'Green', value: 'green' },\r\n        { name: 'Park & Ride', value: 'parkNRide' },\r\n        { name: 'Red 1', value: 'red1' },\r\n        { name: 'Red 3', value: 'red3' },\r\n        { name: 'Brown', value: 'brown' },\r\n        { name: 'Disabled', value: 'handicap' },\r\n        { name: 'Motorcycle/Scooter', value: 'scooter' },\r\n        { name: 'Gold', value: 'gold' },\r\n        { name: 'Silver', value: 'silver' },\r\n        { name: 'Official Business', value: 'business' },\r\n        { name: 'Orange', value: 'orange' },\r\n        { name: 'Blue', value: 'blue' },\r\n        { name: 'Medical Resident', value: 'medRes' },\r\n        { name: 'Staff Commuter', value: 'staffComm' },\r\n        { name: 'Disabled', value: 'disabled' },\r\n        { name: 'Carpool', value: 'carpool' },\r\n        { name: 'Motorcycle/Scooter', value: 'scooter' },\r\n        { name: 'Orange/Blue', value: 'orangeBlue' },\r\n        { name: 'Any', value: 'any' },\r\n        { name: 'Gated', value: 'gated' },\r\n        { name: 'Any (not PNR)', value: 'anyNotPNR' },\r\n        { name: 'Brown/Green', value: 'brownGreen' },\r\n        { name: 'Orange/Blue/Medical/Business', value: 'OMBO' }];\r\n  occupancies = [];\r\n\r\n  constructor(private backendService: BackendService) { }\r\n\r\n  // Called when user clicks an input, update decal permissions\r\n  updateSettings() {\r\n    this.backendService.getFilteredDecalPermissions(this.decals.value).subscribe((permissions: any) => {\r\n      this.permissions = permissions;\r\n    });\r\n\tif (typeof(Storage) !== \"undefined\") {\r\n    localStorage.setItem(\"UserSettings\", JSON.stringify(this.decals.value));\r\n\t}\r\n  }\r\n\r\n  // Called to retrieve occupancy information of selected garage\r\n  updateGarageInfo(garage) {\r\n    this.garage = garage;\r\n    garage.decals.forEach(decal => {\r\n      this.backendService.getOccupanciesByName(garage.name).subscribe((res: any) => {\r\n        this.occupancies = res.data;\r\n      });\r\n    });\r\n  }\r\n\r\n  // Retrieves the human readable decal name\r\n  getDecalName(decalName) {\r\n    const name = this.lut.find((ele) => {\r\n      return ele['value'] === decalName;\r\n    });\r\n    return name ? name.name : decalName;\r\n  }\r\n\r\n  // Retrieves the occupancy represented in percentage\r\n  getOccupancy(decalName) {\r\n    if (this.occupancies) {\r\n      const occupancy = this.occupancies.find((ele) => {\r\n        return ele.decal === decalName;\r\n      });\r\n      const total = this.garage['decals'].find((ele) => ele.name === decalName).specCapacity;\r\n      if (!occupancy) { return 0; }\r\n      return Math.ceil(occupancy.currOccupancy / total * 100);\r\n    }\r\n    return 0;\r\n  }\r\n\r\n  // Retrieves the color for occupancy percentage\r\n  getColor(capacity) {\r\n    if (capacity < 60) {\r\n      // Green\r\n      return '#48af48';\r\n    } else if (capacity < 85) {\r\n      // Yellow\r\n      return '#fde627';\r\n    } else {\r\n      // Red\r\n      return '#a53a3a';\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n\t  this.decals.setValue(JSON.parse(localStorage.getItem('UserSettings')));\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n/*\r\n * Takes a time in military format and converts it to AM/PM\r\n * Usage:\r\n *   value | time\r\n * Example:\r\n *   {{ 07:30 | time }}\r\n *   formats to: 7:30 AM\r\n*/\r\n@Pipe({name: 'time'})\r\nexport class TimePipe implements PipeTransform {\r\n    transform(value: string): string {\r\n        let result = '';\r\n        const time = value.split(':');\r\n        const hour = parseInt(time[0], 10);\r\n        const minutes = parseInt(time[1], 10);\r\n        const AM = hour <= 12;\r\n        result += AM ? hour : (hour - 12);\r\n        result += ':' + minutes;\r\n        result += ' ';\r\n        result += AM ? 'AM' : 'PM';\r\n        return result;\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n@Injectable()\r\nexport class BackendService {\r\n    baseURI = 'https://parking-picker.herokuapp.com';\r\n    mapboxConfigUrl = this.baseURI + '/api/garages/mapbox';\r\n    permissionsConfigUrl = this.baseURI + '/api/decals/';\r\n    garagesConfigUrl = this.baseURI + '/api/garages/';\r\n    occupancyConfigUrl = this.baseURI + '/api/occupancy';\r\n\r\n    constructor(private http: HttpClient) { }\r\n\r\n    // Gets all geojson garage data\r\n    public getGaragesMapbox() {\r\n        return this.http.get(this.mapboxConfigUrl);\r\n    }\r\n\r\n    // Gets geojson garage data based on passed decal types\r\n    public getFilteredGaragesMapbox(permissions) {\r\n        return this.http.post(this.mapboxConfigUrl, { decals: permissions });\r\n    }\r\n\r\n    // Gets decal permission of passed decals\r\n    public getFilteredDecalPermissions(decals) {\r\n        return this.http.post(this.permissionsConfigUrl, { decals: decals });\r\n    }\r\n\r\n    // Gets garage data based on id\r\n    public getGarage(id) {\r\n        return this.http.get(this.garagesConfigUrl + id);\r\n    }\r\n\r\n    // Gets all garage data\r\n    public getAllGarages() {\r\n        return this.http.get(this.garagesConfigUrl);\r\n    }\r\n\r\n    // Get garages based on passed decal types\r\n    public getGarages(decals) {\r\n        return this.http.post(this.garagesConfigUrl, { decals: decals });\r\n    }\r\n\r\n    // Get all occupancy data\r\n    public getOccupancies() {\r\n        return this.http.get(this.occupancyConfigUrl);\r\n    }\r\n\r\n    // Get occupancy of garage by name\r\n    public getOccupanciesByName(garageName) {\r\n        return this.http.get(this.occupancyConfigUrl + '/' + garageName);\r\n    }\r\n\r\n    // Posts request to increment occupancy of decal spaces in garage specified\r\n    public addOccupancy(occupancy) {\r\n        return this.http.post(this.occupancyConfigUrl, { occupancy: occupancy });\r\n    }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n\r\n"],"sourceRoot":""}